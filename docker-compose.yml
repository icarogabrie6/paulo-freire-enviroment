version: "3.7"
services:

  traefik:
    image: "traefik:v2.2"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 200M
    restart: always
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=frontend"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`monitor.lmts.com.br`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:CHANGE"

    ports:
      - "80:80"
        #   - "8080:8080"
    networks:
      - frontend
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"

#################################################################################
  site:
    image: httpd:2.4-alpine
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 200M
    container_name: site
    restart: on-failure
    ports:
      - "70:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.site.rule=Host(`memorial.paulofreire.org`) || Host(`www.memorial.paulofreire.org`)"
      - "providers.docker.network=frontend"
    networks:
      - frontend
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "./apache/site/:/usr/local/apache2/htdocs/"

##################################################################################
  laravel_php:
    restart: always
    container_name: laravel_php
    image: laravel_php:v1
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 200M
    build:
      context: ./laravel/
      dockerfile: laravel_php
    networks:
      - backend
      - frontend
    volumes:
      - applaravel:/var/www/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - laravel_db
#################################################################################

  laravel_nginx:
    build:
      context: ./laravel/
      dockerfile: laravel_nginx
    container_name: laravel_nginx
    image: laravel_nginx
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 200M
    restart: always
    networks:
      - backend
      - frontend
    ports:
      - "8000:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.glossario.rule=Host(`glossario.paulofreire.org`) || Host(`www.glossario.paulofreire.org`)"
      - "providers.docker.network=frontend"
        #  - "traefik.http.services.glossario.loadbalancer.server.port=8000"
    volumes:
      - applaravel:/var/www/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - laravel_php

################################################################################
  laravel_db:
    image: postgres:9.5-alpine
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1000M
    restart: always
    container_name: laravel_db
    environment:
      POSTGRES_PASSWORD: CHANGE
      #     POSTGRES_DB: glossario
      #      POSTGRES_USER: glossario

    networks:
      - backend
    volumes:
    - "dblaravel:/var/lib/postgresql/data"
    - "/etc/timezone:/etc/timezone:ro"
    - "/etc/localtime:/etc/localtime:ro"
####################################################################################
  dspacedb:
    image: dspace/dspace-postgres-pgcrypto
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1000M

    restart: always
    # Note that a separate image exists for DSpace 4x
    # image: dspace/dspace-postgres-4x
    container_name: dspacedb
    environment:
      - PGDATA=/pgdata
    volumes:
      - pgdata:/pgdata
      - "./dspace/add-ons/dspace-docker-tools:/dspace-docker-tools"
    networks:
      - backend
    tty: true
    stdin_open: true

  dspace:
    image: "${DOCKER_OWNER:-dspace}/dspace:${DSPACE_VER:-dspace-6_x-jdk8-test}"
    build:
      context: ./dspace/
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 2000M
    restart: always
    container_name: dspace
    labels:
      - "traefik.http.routers.dspace.rule=Host(`acervo.paulofreire.org`) || Host(`www.acervo.paulofreire.org`)"
      - "traefik.http.routers.wwwdspace.rule=Host(`www.acervo.paulofreire.org`)"
      - "traefik.enable=true"
      - "traefik.http.services.dspace.loadbalancer.server.port=8080"
      - "traefik.docker.network=frontend"     
      - "traefik.http.routers.dspace.middlewares=dspacemid"  
      - "traefik.http.routers.wwwdspace.middlewares=wwwdspacemid"
      - "traefik.http.middlewares.wwwdspacemid.redirectregex.regex=http://www.acervopaulofreire.org"
      - "traefik.http.middlewares.dspacemid.redirectregex.regex=http://acervo.paulofreire.org"
      - "traefik.http.middlewares.dspacemid.redirectregex.replacement=http://acervo.paulofreire.org:8080/xmlui"
      - "traefik.http.middlewares.wwwdspacemid.redirectregex.replacement=http://acervo.paulofreire.org:8080/xmlui"
    ports:
     - 8080:8080
    volumes:
      - "assetstore:/dspace/assetstore"
      - "./dspace/dspace/src/main/docker-compose/local.cfg:/dspace/config/local.cfg"
      - "./dspace/dspace/src/main/docker-compose/xmlui.xconf:/dspace/config/xmlui.xconf" 
      - "solr_authority:/dspace/solr/authority/data"
      - "solr_oai:/dspace/solr/oai/data"
      - "solr_search:/dspace/solr/search/data"
      - "solr_statistics:/dspace/solr/statistics/data"
      - "dspace_config:/dspace/config/" 
      - "dspace_webapps:/dspace/webapps/"
    networks:
      - frontend
      - backend
    depends_on:
      - dspacedb
    tty: true
    stdin_open: true



####################################################################################
volumes:
  applaravel:
  dblaravel:
  pgdata:
  assetstore:
  solr_authority:
  solr_oai:
  solr_search:
  solr_statistics:
  dspace_config:
  dspace_webapps:

networks:
  frontend:
    name: frontend
  backend:
    name: backend



